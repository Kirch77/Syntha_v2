name: Documentation

on:
  push:
    branches: [main, master]
    paths: ["docs-new/**"]
  pull_request:
    branches: [main, master]
    paths: ["docs-new/**"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Needed for git-revision-date-localized plugin

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('docs-new/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r docs-new/requirements.txt

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Build documentation
        run: |
          cd docs-new
          mkdocs build --verbose --site-dir ../site
        env:
          MKDOCS_SITE_URL: ${{ steps.pages.outputs.base_url }}

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # PR validation job
  validate:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r docs-new/requirements.txt

      - name: Validate documentation
        run: |
          cd docs-new
          mkdocs build --verbose --strict
          
      - name: Check for broken links
        run: |
          cd docs-new
          # Install linkchecker if available
          pip install linkchecker || echo "linkchecker not available, skipping link validation"
          if command -v linkchecker &> /dev/null; then
            mkdocs serve --dev-addr=localhost:8000 &
            sleep 5
            linkchecker http://localhost:8000 || echo "Some links may be broken"
            pkill -f "mkdocs serve"
          fi 